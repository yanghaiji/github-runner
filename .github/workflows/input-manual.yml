name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
	
    env:
      PROJECT_VERSION: ''
	  
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: |
        mvn clean install -DskipTests
        export PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
        echo "Maven Project Version: $PROJECT_VERSION" # 输出版本号到控制台
      shell: bash

    - name: Display Current Branch
      run: |
        git branch
      shell: bash
	  
	- name: Check if PROJECT_VERSION is set
      run: echo "PROJECT_VERSION is $PROJECT_VERSION"	  

    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: 查看路径
      run: ls /home/runner/work/github-runner/github-runner
      shell: bash

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
